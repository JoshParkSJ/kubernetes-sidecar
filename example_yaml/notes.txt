# set up a test kubernetes environment
minikube start # start minikube
kubectl get pod -A # check out your shiny new cluster

# pod creation, configuation, deployment
kubectl create -f pod.yaml # create a pod using pod.yaml script
kubectl exec -it sidecar-container-demo -c main-container -- /bin/sh # start an executable into pod "sidecar-container-demo" (or i.e nginx-webapp-6d7b787bd5-ttv4t) and name "main-container"
apt-get update && apt-get install -y curl # individual executes (install apt-get and curl)
curl localhost # individual executes (query localhost and see the response)

# create a deployment
kubectl create -f app.yml

# list of deployments, node, pods, and service configuration
kubectl get deploy -o wide 
kubectl get node -o wide    
kubectl get pod -o wide # ip addresses of every replica (use external IP to access via website)
kubectl get svc -o wide # 80:3XXXX means port 80 is mapped to service obj's port 3XXXX (use 3XXXX for external access)

# create a tunnel to the cluster and produce a url that accesses the cluster (i.e all the pods)
minikube service nginx-webapp --url

# info about cluster and master node
kubectl cluster-info

# destroy pod
kubectl delete pod sidecar-container-demo
